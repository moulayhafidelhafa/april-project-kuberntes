---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: default
spec:
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: rootpassword # Secure this in production
        - name: MYSQL_USER
          value: admin # Secure this in production
        - name: MYSQL_DATABASE
          value: wordpress # The database name
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-internal
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: tools
        image: farrukhsadykov/tools:v6
      - name: artemis
        image: farrukhsadykov/artemis:9.0.0
        ports:
          - containerPort: 5000
      - name: wordpress
        image: wordpress:latest
        ports:
        - containerPort: 80
        env:
        - name: WORDPRESS_DB_HOST
          value: "mysql-internal:3306"  # Reference the MySQL service
        - name: WORDPRESS_DB_USER
          value: admin        # Matches MYSQL_USER
        - name: WORDPRESS_DB_PASSWORD
          value: rootpassword # Matches MYSQL_ROOT_PASSWORD
        - name: WORDPRESS_DB_NAME
          value: wordpress    # The database name

---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-nodeport
  namespace: default
spec:
  type: NodePort
  selector:
    app: wordpress
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080 # You can specify a static port or let Kubernetes assign one
    protocol: TCP
    name: http
  - port: 5000
    targetPort: 5000
    nodePort: 32000 # You can specify a static port or let Kubernetes assign one
    protocol: TCP
    name: custom-port



# k apply -f nodeport.yaml
# k delete -f nodeport.yaml